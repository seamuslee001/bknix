#!/usr/bin/env php
<?php
/**
 * @file
 *
 * This is a quick and dirty script to start Apache+PHPFPM+Redis(+MySQLd).
 *
 * Usage:
 *   bkrun [-p] [-a] [-r] [-c]
 *
 * Options:
 *   -p    PHP-FPM
 *   -a    Apache HTTPd
 *   -r    Redis
 *   -c    Memcache
 *
 * Example: Run with default services (PHP-FPM, Apache, Redis)
 * $ bkrun
 *
 * Example: Run with PHP + Apache
 * $ bkrun -pa
 *
 * Example: Run with PHP, Apache, Redis, Memcache
 * $ bkrun -parc
 */

declare(ticks = 1);

$POLL_INTERVAL = 3;

$procs = [
  'apache' => [
    'option' => 'a',
    'cmd' => 'apachectl -d "$BKNIXDIR/var/httpd" -DFOREGROUND',
  ],
  'php-fpm' => [
    'option' => 'p',
    'cmd' => 'php-fpm -y "$BKNIXDIR/var/php-fpm/php-fpm.conf" --nodaemonize',
    'pidFile' => 'var/php-fpm/php-fpm.pid',
  ],
  'redis' => [
    'option' => 'r',
    'cmd' => 'redis-server "$BKNIXDIR/var/redis/redis.conf"',
  ],
  'memcached' => [
    'option' => 'c',
    'cmd' => 'MEMCACHED_ARGS= ; source "$BKNIXDIR/var/memcached/memcached.conf"; exec memcached $MEMCACHED_ARGS',
  ],
];

/* ********** Helpers ********** */

function onshutdown() {
    static $started = FALSE;
    if ($started) return;
    $started = 1;

    echo "[main] Shutdown started\n";

    global $procs;
    $allPids = array();

    foreach (array_keys($procs) as $name) {
      if (isset($procs[$name]['pidFile']) && file_exists($procs[$name]['pidFile'])) {
        $allPids[] = trim(file_get_contents($procs[$name]['pidFile']));
      }
      if (isset($procs[$name]['pid'])) {
        $allPids[] = $procs[$name]['pid'];
      }
    }

    foreach ($allPids as $pid) { posix_kill($pid, SIGTERM); }
    sleep(2);
    foreach ($allPids as $pid) { posix_kill($pid, SIGKILL); }

    echo "[main] Shutdown finished";
    exit(1);
}

function parse_active_procs($procs, $default) {
  $optExpr = '';
  foreach ($procs as $proc) {
    $optExpr .= $proc['option'];
  }
  $options = getopt($optExpr);
  $activeProcs = [];
  foreach ($procs as $procName => $proc) {
    if (isset($options[$proc['option']])) {
      $activeProcs[] = $procName;
    }
  }
  return empty($activeProcs) ? $default : $activeProcs;
}

/* ********** Main ********** */

$activeProcs = parse_active_procs($procs, ['apache', 'php-fpm', 'redis', 'memcached']);
if (!getenv('BKNIXDIR')) {
  fwrite(STDERR, "Mandatory variable BKNIXDIR has not been set.");
  exit(1);
}

$installed = FALSE;
while (TRUE) {
  foreach ($activeProcs as $name) {
    if (!isset($procs[$name]['pid'])) {
      // Launch
      $pid = pcntl_fork();
      if ($pid == -1) {
        die("($name) Failed to fork");
      }
      elseif ($pid) {
        $procs[$name]['pid'] = $pid;
      }
      else {
        echo "[$name] Starting\n";
        passthru($procs[$name]['cmd'], $ret);
        echo "[$name] Exited ($ret)\n";
        exit($ret);
      }
    }
    else {
      // Check status
      $res = pcntl_waitpid($procs[$name]['pid'], $pidStatus, WNOHANG);
      if ($res == -1 || $res > 0) {
        echo "[$name] Process gone (". $procs[$name]['pid'] .")\n";
        unset($procs[$name]['pid']);
      }
    }
  }

  if (!$installed) {
    pcntl_signal(SIGINT, 'onshutdown');
  }

  sleep($POLL_INTERVAL);
}
