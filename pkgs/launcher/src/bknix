#!/usr/bin/env bash
set -e

## I shouldn't exist! Yet I do! This is a quick hack that doesn't really do
## a nice job of managing processes.
##
## I'd like to see something more like http://supervisord.org/ (which is a non-root process manager)...



###########################################################
## Variables

PROG=$(basename "$0")

BKIT_BASE="$BKNIXDIR/civicrm-buildkit"
HTTPD_BASE="$BKNIXDIR/var/httpd"
MEMCACHED_BASE="$BKNIXDIR/var/memcached"
MYSQL_BASE="$BKNIXDIR/var/mysql"
PHP_BASE="$BKNIXDIR/var/php"
PHPFPM_BASE="$BKNIXDIR/var/php-fpm"
REDIS_BASE="$BKNIXDIR/var/redis"

HTTPD_PORT=${HTTPD_PORT:-8001}
MEMCACHED_PORT=${MEMCACHED_PORT:-12221}
MYSQLD_PORT=${MYSQLD_PORT:-3307}
PHPFPM_PORT=${PHPFPM_PORT:-9009}
REDIS_PORT=${REDIS_PORT:-6380}

LOCALHOST=${LOCALHOST:-127.0.0.1}
HTTPD_DOMAIN=${HTTPD_DOMAIN:-bknix}

FORCE_INIT=

###########################################################
## Library

function bknix_validate() {
  if [ -z "$BKNIXSRC" -o ! -d "$BKNIXSRC" ]; then
    echo "ERROR: Missing expected variable: BKNIXSRC"
  fi
  if [ -z "$BKNIXDIR" ]; then
    echo "ERROR: Missing expected variable: BKNIXDIR"
  fi
  if [ -z "$AMPHOME" ]; then
    echo "ERROR: Missing expected variable: AMPHOME"
  fi
  if [ -z "$PHP_INI_SCAN_DIR" ]; then
    echo "ERROR: Missing expected variable: PHP_INI_SCAN_DIR"
  fi
  if [ -z "$MYSQL_HOME" ]; then
    echo "ERROR: Missing expected variable: MYSQL_HOME"
  fi

  if [ -z "$BKNIXSRC" -o ! -d "$BKNIXSRC" -o -z "$BKNIXDIR" -o  -z "$AMPHOME" -o -z "$MYSQL_HOME" -o -z "$PHP_INI_SCAN_DIR" ]; then
    echo
    echo "You may wish to set the environment variables. Try one of these:"
    echo "1. Run commands through bknix's \"nix-shell\", which will automatically initialize the variables."
    echo "2. In your .profile or .bashrc, use \"eval \`bknix env\`\" to initialize the variables."
    exit 2
  fi
}

## usage: template_render <input-file>
function template_render() {
    cat "$1" \
      | sed "s;%%BKNIXDIR%%;$BKNIXDIR;g" \
      | sed "s;%%BKITBLD%%;$BKITBLD;g" \
      | sed "s;%%HTTPD_DOMAIN%%;$HTTPD_DOMAIN;g" \
      | sed "s;%%HTTPD_PORT%%;$HTTPD_PORT;g" \
      | sed "s;%%LOCALHOST%%;$LOCALHOST;g" \
      | sed "s;%%MEMCACHED_PORT%%;$MEMCACHED_PORT;g" \
      | sed "s;%%MYSQLD_PORT%%;$MYSQLD_PORT;g" \
      | sed "s;%%PHPFPM_PORT%%;$PHPFPM_PORT;g" \
      | sed "s;%%REDIS_PORT%%;$REDIS_PORT;g"
}

function cmd_httpd_init() {
  if [ -n "$FORCE_INIT" -o ! -e "$HTTPD_BASE" ]; then
    echo "($PROG) Initialize httpd config ($HTTPD_BASE; port $HTTPD_PORT)"
    REALHTTPDIR=$(dirname $(dirname $(which httpd)))
    mkdir -p "$HTTPD_BASE" "$HTTPD_BASE/logs" "$HTTPD_BASE/conf" "$HTTPD_BASE/htdocs"
    if [ ! -f "$HTTPD_BASE/htdocs/index.html" ]; then
      echo "<html><body>Placeholder</body></html>" > "$HTTPD_BASE/htdocs/index.html"
    fi
    for SUBDIR in bin cgi-bin error icons modules ;do
      [ ! -e "$HTTPD_BASE/$SUBDIR" ] && ln -s "$REALHTTPDIR/$SUBDIR" "$HTTPD_BASE/$SUBDIR"
    done

    cp -r "$BKNIXSRC/templates/httpd"/* "$HTTPD_BASE/conf/"
    chmod -R u+rw "$HTTPD_BASE/conf/"
    template_render "$BKNIXSRC/templates/httpd/httpd.conf.tmpl" > "$HTTPD_BASE/conf/httpd.conf"
  else
    echo "($PROG) Found existing httpd config ($HTTPD_BASE). Files not changed."
  fi
}

function cmd_mysql_init() {
  if false; then echo; fi
  ## DB init
  #m mkdir -p "$MYSQL_BASE" "$MYSQL_BASE/tmp" "$MYSQL_BASE/conf"
  #m sed "s;%%BKNIXDIR%%;$BKNIXDIR;g" < "$BKNIXSRC/templates/my.cnf.tmpl" > "$MYSQL_BASE/conf/my.cnf"
  #m rm -rf "$MYSQL_BASE/data" ## REVERT
  #m if [ ! -d "$MYSQL_BASE/data" ]; then
  #m  echo "($PROG) Initialize MySQL database"
  #m  mysql_install_db
  #m fi
}

function cmd_bkit_init() {
  if [ ! -e "$BKIT_BASE" ]; then
    ## Note: This can be massive. Only download if needed -- even if you FORCE_INIT.
    echo "($PROG) Download buildkit toolchain ($BKIT_BASE)"
    git clone https://github.com/civicrm/civicrm-buildkit "$BKIT_BASE"
  else
    echo "($PROG) Found existing buildkit toolchain ($BKIT_BASE)."
  fi
  civi-download-tools -q

  if [ -n "$FORCE_INIT" -o ! -e "$AMPHOME/services.yml" ]; then
    echo "($PROG) Initialize amp config ($AMPHOME)"
    mkdir -p "$AMPHOME"
    amp config:set \
      --httpd_type=apache24 \
      --httpd_restart_command="NONE" \
      --httpd_visibility="local" \
      --httpd_shared_ports="80,$HTTPD_PORT" \
      --hosts_type="file" \
      --db_type="mysql_ram_disk" \
      --mysqld_port="$MYSQLD_PORT" \
      --perm_type=none
  else
    echo "($PROG) Found existing amp config ($AMPHOME). Files not changed."
  fi

  ## We don't need this since we're use mod_vhost_alias:
  #if [ -n "$FORCE_INIT" -o ! -e "$BKNIXDIR/.amp/apache24-vhost.php" ]; then
  #  echo "($PROG) Initialize amp vhost template ($BKNIXDIR/.amp/apache24-vhost.php)"
  #  mkdir -p "$BKNIXDIR/.amp/"
  #  template_render "$BKNIXSRC/templates/apache24-vhost.php.tmpl" > "$BKNIXDIR/.amp/apache24-vhost.php"
  #else
  #  echo "($PROG) Found existing amp vhost template ($BKNIXDIR/.amp/apache24-vhost.php). Files not changed."
  #fi

  if [ -n "$FORCE_INIT" -o ! -e "$BKIT_BASE/app/civibuild.conf" ]; then
    echo "($PROG) Initialize civibuild config ($BKIT_BASE/app/civibuild.conf)"
    echo "#!/usr/bin/env bash" > "$BKIT_BASE/app/civibuild.conf"
    echo 'if [ -z "$BKNIXDIR" ]; then echo "Undefined: BKNIXDIR" >&2 ; exit 1; fi' >> "$BKIT_BASE/app/civibuild.conf"
    echo 'BLDDIR="$BKNIXDIR/build"' >> "$BKIT_BASE/app/civibuild.conf"
    echo "URL_TEMPLATE=\"http://%SITE_NAME%.$HTTPD_DOMAIN:$HTTPD_PORT\"" >> "$BKIT_BASE/app/civibuild.conf"
    echo "APACHE_VHOST_ALIAS=1" >> "$BKIT_BASE/app/civibuild.conf"
  else
    echo "($PROG) Found existing civibuild config ($BKIT_BASE/app/civibuild.conf). Files not changed."
  fi
}

function cmd_php_init() {
  if [ -n "$FORCE_INIT" -o ! -e "$PHP_BASE" ]; then
    echo "($PROG) Initialize php config ($PHP_BASE)"
    mkdir -p "$PHP_BASE"

    template_render "$BKNIXSRC/templates/php.ini.tmpl" > "$PHP_BASE/php.ini"
  else
    echo "($PROG) Found existing php config ($PHP_BASE). Files not changed."
  fi
}

function cmd_phpfpm_init() {
  if [ -n "$FORCE_INIT" -o ! -e "$PHPFPM_BASE" ]; then
    echo "($PROG) Initialize php-fpm config ($PHPFPM_BASE; port $PHPFPM_PORT)"
    mkdir -p "$PHPFPM_BASE"

    template_render "$BKNIXSRC/templates/php-fpm.conf.tmpl" > "$PHPFPM_BASE/php-fpm.conf"
  else
    echo "($PROG) Found existing php-fpm config ($PHPFPM_BASE). Files not changed."
  fi
}

function cmd_redis_init() {
  if [ -n "$FORCE_INIT" -o ! -e "$REDIS_BASE" ]; then
    echo "($PROG) Initialize redis config ($REDIS_BASE; port $REDIS_PORT)"
    mkdir -p "$REDIS_BASE"
    template_render "$BKNIXSRC/templates/redis.conf.tmpl" > "$REDIS_BASE/redis.conf"
  else
    echo "($PROG) Found existing redis config ($REDIS_BASE). Files not changed."
  fi
}

function cmd_memcached_init() {
  if [ -n "$FORCE_INIT" -o ! -e "$MEMCACHED_BASE" ]; then
    echo "($PROG) Initialize memcached config ($MEMCACHED_BASE; port $MEMCACHED_PORT)"
    mkdir -p "$MEMCACHED_BASE"
    template_render "$BKNIXSRC/templates/memcached.conf.tmpl" > "$MEMCACHED_BASE/memcached.conf"
  else
    echo "($PROG) Found existing memcached config ($MEMCACHED_BASE). Files not changed."
  fi
}

function cmd_initvars() {
  echo "($PROG) The current initialization variables:"

  for var in BKNIXDIR HTTPD_DOMAIN HTTPD_PORT LOCALHOST MEMCACHED_PORT MYSQLD_PORT PHPFPM_PORT REDIS_PORT ; do
    local val
    eval "val=\$$var"
    echo " - $var: $val"
  done
}

function cmd_init() {
  cmd_php_init
  cmd_mysql_init
  cmd_redis_init
  cmd_memcached_init
  cmd_phpfpm_init
  cmd_httpd_init
  cmd_bkit_init
}

function cmd_run() {
  "$BKNIXSRC"/bkrun "$@"
}

function cmd_purge() {
  echo "About to purge all configuration and data."
  echo "Please ensure that you've stopped any running services first."
  echo -n "Continue? (y/N) "
  read resp
  if [ "$resp" = "y" ]; then
    echo "Purging..."
    [ -d "$HTTPD_BASE" ] && rm -rf "$HTTPD_BASE"
    [ -d "$AMPHOME" ] && rm -rf "$AMPHOME"
    [ -d "$PHP_BASE" ] && rm -rf "$PHP_BASE"
    [ -d "$MYSQL_HOME" ] && rm -rf "$MYSQL_HOME"
    [ -f "$BKIT_BASE/app/civibuild.conf" ] && rm -f "$BKIT_BASE/app/civibuild.conf"
  else
    echo "Nevermind"
  fi
}

function cmd_bkit_update() {
  pushd "$BKIT_BASE" >> /dev/null
    git pull
    ./bin/civi-download-tools
  popd >> /dev/null
}

function cmd_help() {
    echo "usage: $PROG <action> [options]"
    echo ""
    echo "actions:"
    echo "  help                 Show help"
    echo "  env                  Generate shell (bash) configuration commands"
    # echo "  shell                Open a subshell (bash) with configuration applied"
    echo "  init                 Initialize config and data files"
    echo "  run                  Run all daemons in foreground"
    echo "  update               Update tools"
    echo ""
    echo "common options:"
    echo "  --data-dir <dir>     Store configuration and data in a different location (Default: \$BKNIXDIR or \$HOME/bknix)"
    echo
    echo "init options:"
    echo "  -f | --force         Force-init, overwriting existing config files"
    echo
    echo "init template variables:"
    echo "  HTTPD_DOMAIN         (Default: bknix)"
    echo "  HTTPD_PORT           (Default: 8001)"
    echo "  LOCALHOST            (Default: 127.0.0.1)"
    echo "  MEMCACHED_PORT       (Default: 12221)"
    echo "  MYSQLD_PORT          (Default: 3307)"
    echo "  PHPFPM_PORT          (Default: 9009)"
    echo "  REDIS_PORT           (Default: 6380)"
}

function cmd_env() {
  echo "export BKNIXDIR='$BKNIXDIR'"
  echo "export PATH='$BKNIXDIR/civicrm-buildkit/bin':\$PATH"
  echo "export AMPHOME='$AMPHOME'"
  echo "export PHP_INI_SCAN_DIR='$PHP_INI_SCAN_DIR':/etc/php.d"
  echo "export MYSQL_HOME='$MYSQL_HOME'"
  echo "export BKIT='$BKIT'"
  echo "export BKITBLD='$BKITBLD'"
  echo "export NODE_PATH='$BKIT/node_modules':\$NODE_PATH"
}

function env_init() {
  if [ -z "$BKNIXDIR" ]; then
    BKNIXDIR="$HOME/bknix"
  fi
  PATH="$BKNIXDIR/civicrm-buildkit/bin:$PATH"
  AMPHOME="$BKNIXDIR/var/amp"
  PHP_INI_SCAN_DIR="$BKNIXDIR/var/php:/etc/php.d"
  MYSQL_HOME="$BKNIXDIR/var/mysql/conf"
  BKIT="$BKNIXDIR/civicrm-buildkit"
  BKITBLD="$BKNIXDIR/build"
  NODE_PATH="$BKIT/node_modules:$NODE_PATH"
  export BKNIXDIR AMPHOME PHP_INI_SCAN_DIR MYSQL_HOME PATH BKIT BKITBLD NODE_PATH
}

###########################################################
## Main

CMD="help"
if [ -n "$1" ]; then
  CMD="$1"
  shift
fi
while [ -n "$1" ]; do
  OPTION="$1"
  shift
  case "$OPTION" in
    -f|--force)         FORCE_INIT=1 ;;
    --data-dir)         BKNIXDIR="$1" ; shift; ;;
    *)                  echo "Unrecognized option: $OPTION"; echo; cmd_help; exit 2; ;;
  esac
done
case "$CMD" in
  env)           env_init; cmd_env; ;;
  # shell)         env_init; bash -i; ;;
  init)          env_init; bknix_validate; cmd_initvars; cmd_init ;;
  run)           env_init; bknix_validate; cmd_init ; cmd_run ;;

  purge)         env_init; bknix_validate; cmd_purge ;;
  update)        env_init; bknix_validate; cmd_bkit_init; cmd_bkit_update ;;

  help)          cmd_help ;;
  *)             cmd_help ; exit 1 ;;
esac
