#!/usr/bin/env bash
set -e

## I shouldn't exist! Yet I do! This is a quick hack that doesn't really do
## a nice job of managing processes.
##
## I'd like to see something more like http://supervisord.org/ (which is a non-root process manager)...

###########################################################
## Variables

PROG=$(basename "$0")
FORCE_INIT=

###########################################################
## Library

function bknix_validate() {
  if [ -z "$BKNIXSRC" -o ! -d "$BKNIXSRC" ]; then
    echo "ERROR: Missing expected variable: BKNIXSRC"
  fi
  if [ -z "$LOCO_PRJ" ]; then
    echo "ERROR: Missing expected variable: LOCO_PRJ"
  fi
  if [ -z "$AMPHOME" ]; then
    echo "ERROR: Missing expected variable: AMPHOME"
  fi
  if [ -z "$PHP_INI_SCAN_DIR" ]; then
    echo "ERROR: Missing expected variable: PHP_INI_SCAN_DIR"
  fi
  if [ -z "$MYSQL_HOME" ]; then
    echo "ERROR: Missing expected variable: MYSQL_HOME"
  fi

  if [ -z "$BKNIXSRC" -o ! -d "$BKNIXSRC" -o -z "$LOCO_PRJ" -o  -z "$AMPHOME" -o -z "$MYSQL_HOME" -o -z "$PHP_INI_SCAN_DIR" ]; then
    echo
    echo "You may wish to set the environment variables. Try one of these:"
    echo "1. Run commands through bknix's \"nix-shell\", which will automatically initialize the variables."
    echo "2. In your .profile or .bashrc, use \"eval \`bknix env\`\" to initialize the variables."
    exit 2
  fi
}

function cmd_init() {
  ## Net to setup php.ini before civi-download-tools
  loco init -v php-fpm
  # loco init -v mysql redis memcached php-fpm apache-vdr

  if [ ! -e "$BKIT" ]; then
    ## Note: This can be massive. Only download if needed -- even if you FORCE_INIT.
    echo "($PROG) Download buildkit toolchain ($BKIT)"
    git clone https://github.com/civicrm/civicrm-buildkit "$BKIT"
  else
    echo "($PROG) Found existing buildkit toolchain ($BKIT)."
  fi
  civi-download-tools -q

  loco init -v

  if [ -n "$FORCE_INIT" -o ! -e "$BKIT/app/civibuild.conf" ]; then
    echo "($PROG) Initialize civibuild config ($BKIT/app/civibuild.conf)"
    echo "#!/usr/bin/env bash" > "$BKIT/app/civibuild.conf"
    echo 'if [ -z "$LOCO_PRJ" ]; then echo "Undefined: LOCO_PRJ" >&2 ; exit 1; fi' >> "$BKIT/app/civibuild.conf"
    echo 'BLDDIR="$LOCO_PRJ/build"' >> "$BKIT/app/civibuild.conf"
    echo "URL_TEMPLATE=\"http://%SITE_NAME%.$HTTPD_DOMAIN:$HTTPD_PORT\"" >> "$BKIT/app/civibuild.conf"
    echo "APACHE_VHOST_ALIAS=1" >> "$BKIT/app/civibuild.conf"
  else
    echo "($PROG) Found existing civibuild config ($BKIT/app/civibuild.conf). Files not changed."
  fi
}

function cmd_initvars() {
  echo "($PROG) The current initialization variables:"

  for var in LOCO_PRJ HTTPD_DOMAIN HTTPD_PORT HTTPD_VISIBILITY HOSTS_TYPE LOCALHOST MEMCACHED_PORT MYSQLD_PORT PHPFPM_PORT REDIS_PORT ; do
    local val
    eval "val=\$$var"
    echo " - $var: $val"
  done
}

function cmd_run() {
  loco run -v "$@"
}

function cmd_purge() {
  echo "About to purge all configuration and data."
  echo "Please ensure that you've stopped any running services first."
  echo -n "Continue? (y/N) "
  read resp
  if [ "$resp" = "y" ]; then
    echo "Purging..."
    loco clean
    [ -f "$BKIT/app/civibuild.conf" ] && rm -f "$BKIT/app/civibuild.conf"
  else
    echo "Nevermind"
  fi
}

function cmd_bkit_update() {
  pushd "$BKIT" >> /dev/null
    git pull
    ./bin/civi-download-tools
  popd >> /dev/null
}

function cmd_help() {
    echo "usage: $PROG <action> [options]"
    echo ""
    echo "actions:"
    echo "  help                 Show help"
    echo "  env                  Generate shell (bash) configuration commands"
    # echo "  shell                Open a subshell (bash) with configuration applied"
    echo "  init                 Initialize config and data files"
    echo "  run                  Run all daemons in foreground"
    echo "  update               Update tools"
    echo ""
    echo "common options:"
    echo "  --data-dir <dir>     Store configuration and data in a different location (Default: \$LOCO_PRJ or \$HOME/bknix)"
    echo
    echo "init options:"
    echo "  -f | --force         Force-init, overwriting existing config files"
    echo
    echo "init template variables:"
    echo "  HTTPD_DOMAIN         (Default: bknix)"
    echo "  HTTPD_PORT           (Default: 8001)"
    echo "  LOCALHOST            (Default: 127.0.0.1)"
    echo "  MEMCACHED_PORT       (Default: 12221)"
    echo "  MYSQLD_PORT          (Default: 3307)"
    echo "  PHPFPM_PORT          (Default: 9009)"
    echo "  REDIS_PORT           (Default: 6380)"
}

###########################################################
## Main

CMD="help"
if [ -n "$1" ]; then
  CMD="$1"
  shift
fi
while [ -n "$1" ]; do
  OPTION="$1"
  shift
  case "$OPTION" in
    -f|--force)         FORCE_INIT=1 ;;
    --data-dir)         LOCO_PRJ="$1" ; shift; ;;
    *)                  echo "Unrecognized option: $OPTION"; echo; cmd_help; exit 2; ;;
  esac
done
case "$CMD" in
  env)           loco env --export ;;
  init)          eval $( loco env --export ); bknix_validate; cmd_initvars; cmd_init ;;
  run)           eval $( loco env --export ); bknix_validate; cmd_init ; cmd_run ;;

  purge)         eval $( loco env --export ); bknix_validate; cmd_purge ;;
  update)        eval $( loco env --export ); bknix_validate; cmd_init; cmd_bkit_update ;;

  help)          cmd_help ;;
  *)             cmd_help ; exit 1 ;;
esac
